// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-py"
  // output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  role         Role      @default(CLIENT)
  name         String
  surname      String
  phone        String
  email        String    @unique
  address      String?
  dateOfBirth  DateTime?
  placeOfBirth String?
  sex          String?
  clientType   String?
  tasks        String[] // ["Consult", "Software", etc.]
  status       String?
  description  String?
  createdAt    DateTime  @default(now())
  invoices     Invoice[]
}

model Invoice {
  id        String            @id @default(uuid())
  clientId  String
  client    User              @relation(fields: [clientId], references: [id])
  recurring RecurringInvoice?

  invoiceType   String // one-time, monthly, annual
  invoiceDate   DateTime
  dueDate       DateTime
  total         Float
  services      Service[]
  accountName   String
  sortCode      String
  accountNumber String
  iban          String?
  logoPath      String?
  pdfPath       String?
  sent          Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Service {
  id          String  @id @default(uuid())
  invoiceId   String
  invoice     Invoice @relation(fields: [invoiceId], references: [id])
  description String
  price       Float
}

model RecurringInvoice {
  id        String   @id @default(uuid())
  invoiceId String   @unique
  invoice   Invoice  @relation(fields: [invoiceId], references: [id])
  frequency String // "monthly", "annual"
  nextRun   DateTime
}

model Message {
  id         String      @id @default(uuid())
  subject    String
  content    String
  fromEmail  String
  toEmail    String
  sentAt     DateTime    @default(now())
  repeatRule RepeatRule? @relation("MessageRepeatRule")
}

model RepeatRule {
  id        String    @id @default(uuid())
  frequency Frequency
  messageId String    @unique
  message   Message   @relation("MessageRepeatRule", fields: [messageId], references: [id])
}

enum Role {
  ADMIN
  CLIENT
  POTENTIAL
  GUEST
  OTHER
}

enum InvoiceType {
  ONE_TIME
  MONTHLY
  ANNUAL
}

enum InvoiceStatus {
  UNPAID
  PAID
  OVERDUE
}

enum Frequency {
  DAILY
  WEEKLY
  MONTHLY
}
