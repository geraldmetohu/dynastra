# -*- coding: utf-8 -*-
# code generated by Prisma. DO NOT EDIT.
# pyright: reportUnusedImport=false
# fmt: off

# global imports for type checking
from builtins import bool as _bool
from builtins import int as _int
from builtins import float as _float
from builtins import str as _str
import sys
import decimal
import datetime
from typing import (
    TYPE_CHECKING,
    Optional,
    Iterable,
    Iterator,
    Sequence,
    Callable,
    ClassVar,
    NoReturn,
    TypeVar,
    Generic,
    Mapping,
    Tuple,
    Union,
    List,
    Dict,
    Type,
    Any,
    Set,
    overload,
    cast,
)
from typing_extensions import TypedDict, Literal


LiteralString = str
# -- template enums.py.jinja --
from ._compat import StrEnum


class Role(StrEnum):
    ADMIN = 'ADMIN'
    CLIENT = 'CLIENT'
    POTENTIAL = 'POTENTIAL'
    GUEST = 'GUEST'
    OTHER = 'OTHER'

class InvoiceType(StrEnum):
    ONE_TIME = 'ONE_TIME'
    MONTHLY = 'MONTHLY'
    ANNUAL = 'ANNUAL'

class InvoiceStatus(StrEnum):
    UNPAID = 'UNPAID'
    PAID = 'PAID'
    OVERDUE = 'OVERDUE'

class Frequency(StrEnum):
    DAILY = 'DAILY'
    WEEKLY = 'WEEKLY'
    MONTHLY = 'MONTHLY'

